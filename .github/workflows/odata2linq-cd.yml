# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: odata2linq-cd

on:
  push:
    tags:
    - 'OData2Linq_*.*.*'

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
    - uses: actions/checkout@v4
    - name: Setup dotnet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore ./OData2Linq.sln
    - name: Build
      run: dotnet build ./OData2Linq.sln -c Release --no-restore
    - name: Test
      run: dotnet test ./OData2Linq.sln -c Release --no-build --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Pack
      run: dotnet pack ./src/OData2Linq/OData2Linq.csproj -c Release -o .\artifacts --no-build
    - name: Publish to NuGet
      run: dotnet nuget push .\artifacts\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
